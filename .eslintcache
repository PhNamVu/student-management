[{"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\index.tsx":"1","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\reportWebVitals.ts":"2","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\App.tsx":"3","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\Users.tsx":"4","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\shared\\button\\PrimaryBtn.tsx":"5","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\graphql\\autogenerate\\hooks.tsx":"6","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\hooks\\use-auth.tsx":"7","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\LoginPage.tsx":"8","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\CreateMagazine.tsx":"9","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\apollo\\auth-client.tsx":"10","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\apollo\\unauth-client.tsx":"11","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\AdminNav.tsx":"12","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\config\\index.ts":"13","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\PageNotFound.tsx":"14","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\MagazinesStudent.tsx":"15","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\MagazinesAdmin.tsx":"16","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\ContributeMgz.tsx":"17","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\MagazineAdminBlock.tsx":"18","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\MagazineStudentBlock.tsx":"19"},{"size":964,"mtime":1613488218795,"results":"20","hashOfConfig":"21"},{"size":431,"mtime":1613488218796,"results":"22","hashOfConfig":"21"},{"size":3549,"mtime":1613587579028,"results":"23","hashOfConfig":"21"},{"size":753,"mtime":1612852332576,"results":"24","hashOfConfig":"25"},{"size":1020,"mtime":1613488218793,"results":"26","hashOfConfig":"21"},{"size":3328,"mtime":1613365396397,"results":"27","hashOfConfig":"21"},{"size":2475,"mtime":1613488218795,"results":"28","hashOfConfig":"21"},{"size":2528,"mtime":1613488218791,"results":"29","hashOfConfig":"21"},{"size":2999,"mtime":1613488218790,"results":"30","hashOfConfig":"21"},{"size":2143,"mtime":1613488218791,"results":"31","hashOfConfig":"21"},{"size":405,"mtime":1613488218792,"results":"32","hashOfConfig":"21"},{"size":1708,"mtime":1613573155410,"results":"33","hashOfConfig":"21"},{"size":613,"mtime":1613488218794,"results":"34","hashOfConfig":"21"},{"size":661,"mtime":1613587496052,"results":"35","hashOfConfig":"21"},{"size":4064,"mtime":1613587535091,"results":"36","hashOfConfig":"21"},{"size":4035,"mtime":1613587535247,"results":"37","hashOfConfig":"21"},{"size":442,"mtime":1613587535089,"results":"38","hashOfConfig":"21"},{"size":5316,"mtime":1613587535203,"results":"39","hashOfConfig":"21"},{"size":5248,"mtime":1613587535094,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"fy8llf",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19y7ore",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\index.tsx",[],[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\reportWebVitals.ts",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\App.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\Users.tsx",[],[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\shared\\button\\PrimaryBtn.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\graphql\\autogenerate\\hooks.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\hooks\\use-auth.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\LoginPage.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\CreateMagazine.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\apollo\\auth-client.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\apollo\\unauth-client.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\AdminNav.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\config\\index.ts",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\PageNotFound.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\MagazinesStudent.tsx",["84","85"],"import React from 'react'\r\nimport { useGetMagazineQuery } from '../graphql/autogenerate/hooks'\r\nimport { Container, Row, Button } from 'reactstrap'\r\nimport { Tabs, Tab, makeStyles} from '@material-ui/core';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './magazine.css'\r\nimport MagazineStudentBlock from '../components/MagazineStudentBlock'\r\n\r\n\r\n//Style for Tabs\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    indicator: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#ffc107\",\r\n    },\r\n    active_tab: {\r\n        color: \"#ffc107\",\r\n    },\r\n    default_tabStyle: {\r\n        color: \"#9B9B9B\",\r\n    }\r\n  }))\r\n  \r\nconst handleQueryVariables = (value: any) => {\r\n    if(value == 0) return {closureTemp: {_gt: \"now()\"}} \r\n    else if (value == 1) return {closureFinal: {_gt: \"now()\"}}\r\n    else if (value == 2) return {closureFinal: {_lt: \"now()\"}}\r\n}\r\n\r\nexport const MagazinesStudentPage = () => {\r\n    const [value, setValue] = React.useState(0)\r\n    const { data, loading, error } = useGetMagazineQuery({\r\n        fetchPolicy: 'network-only',\r\n        variables: { where: handleQueryVariables(value)}\r\n      })\r\n    const navigate = useNavigate();\r\n    const handleAddMgz = () => {\r\n        navigate(`/magazine/add`)\r\n    }\r\n    const mgzDetail = data && data.magazines\r\n    \r\n    const handleChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\r\n        setValue(newValue)\r\n    }\r\n    const classes = useStyles()\r\n    \r\n    // if (loading) return <div>Loading ...</div>\r\n    if (error) return <div> Error at Magazines component {console.log(error)}</div>\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"justify-content\">\r\n                <h2 style={{ padding: \"20px 0 1px 12px\", }}>Magazines</h2>\r\n                <div className=\"mgzTabs\">\r\n                    <Tabs \r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        classes={{ indicator: classes.indicator}}\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab label=\"SUBMITMENT ALLOW\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===0 ? classes.active_tab :classes.default_tabStyle}/>\r\n                        <Tab label=\"COMPLETE SUBMITMENT\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===1 ? classes.active_tab :classes.default_tabStyle}/>\r\n                        <Tab label=\"PUBLISHED\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===2 ? classes.active_tab :classes.default_tabStyle}/>\r\n                    </Tabs>\r\n                </div>\r\n                <Row className='mgzAdd d-flex justify-content-end'>\r\n                    <Button color=\"warning\" onClick={handleAddMgz}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                        <span>&nbsp;&nbsp;Add</span>\r\n                    </Button>\r\n                </Row>\r\n                {showMgz(chunk(mgzDetail, 3), value)}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default MagazinesStudentPage\r\n\r\n//divide 3 card each CardDeck (row)\r\nconst chunk = (arr: any, chunkSize: number) =>  {\r\n    if(arr) {\r\n        const cache: Array<any> = new Array<any>()\r\n        const tmp = [...arr]\r\n        if (chunkSize <= 0) return cache\r\n        while (tmp.length) cache.push(tmp.splice(0, chunkSize))\r\n        return cache\r\n    }\r\n}\r\n//return data to MagazineBlock\r\nconst showMgz = (info: any, value:number) => {\r\n    if(info) {\r\n        return info.map( (subArr: any, index: any) => {\r\n            const aMgzBlock = subArr.map( (el: any, i: any) => {\r\n                return <MagazineStudentBlock key={i} label={el.label} closureTemp={el.closureTemp} closureFinal={el.closureFinal} tabStatus={value} createdAt={el.createdAt}/>\r\n            })\r\n            return <Row key={index} style={{margin: 0}}>{aMgzBlock}</Row>\r\n        })\r\n    }\r\n}","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\MagazinesAdmin.tsx",["86","87","88","89","90"],"import React from 'react'\r\nimport { useGetMagazineQuery } from '../graphql/autogenerate/hooks'\r\nimport { Container, Row, Button } from 'reactstrap'\r\nimport { Tabs, Tab, makeStyles} from '@material-ui/core';\r\nimport './magazine.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MagazineBlock } from '../components/MagazineAdminBlock'\r\n\r\n\r\n//Style for Tabs\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    indicator: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#ffc107\",\r\n    },\r\n    active_tab: {\r\n        color: \"#ffc107\",\r\n    },\r\n    default_tabStyle: {\r\n        color: \"#9B9B9B\",\r\n    }\r\n  }))\r\n  \r\nconst handleQueryVariables = (value: any) => {\r\n    if(value == 0) return {closureTemp: {_gt: \"now()\"}} \r\n    else if (value == 1) return {closureFinal: {_gt: \"now()\"}}\r\n    else if (value == 2) return {closureFinal: {_lt: \"now()\"}}\r\n}\r\n\r\nexport const MagazinesPage = () => {\r\n    const [value, setValue] = React.useState(0)\r\n    const { data, loading, error } = useGetMagazineQuery({\r\n        fetchPolicy: 'network-only',\r\n        variables: { where: handleQueryVariables(value)}\r\n      })\r\n      // if (loading) return <div>Loading ...</div>\r\n    if (error) return <div> Error at Magazines component {console.log(error)}</div>\r\n    const mgzDetail = data && data.magazines\r\n    const handleChange = (event: React.ChangeEvent<unknown>, newValue: number) => {\r\n        setValue(newValue)\r\n    }\r\n    const navigate = useNavigate();\r\n    const handleAddMgz = () => {\r\n        navigate(`/magazine/add`)\r\n    }\r\n    const classes = useStyles()\r\n    return (\r\n        <Container>\r\n            <div className=\"justify-content\">\r\n                <h2 style={{ padding: \"20px 0 1px 12px\", }}>Magazines</h2>\r\n                <div className=\"mgzTabs\">\r\n                    <Tabs \r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        classes={{ indicator: classes.indicator}}\r\n                        variant=\"scrollable\"\r\n                        scrollButtons=\"auto\"\r\n                    >\r\n                        <Tab label=\"SUBMITMENT ALLOW\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===0 ? classes.active_tab :classes.default_tabStyle}/>\r\n                        <Tab label=\"COMPLETE SUBMITMENT\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===1 ? classes.active_tab :classes.default_tabStyle}/>\r\n                        <Tab label=\"PUBLISHED\" disableRipple style={{padding: '0', margin: '6px 12px 0 12px'}} className={value===2 ? classes.active_tab :classes.default_tabStyle}/>\r\n                    </Tabs>\r\n                </div>\r\n                <Row className='mgzAdd d-flex justify-content-end'>\r\n                    <Button color=\"warning\" onClick={handleAddMgz}>\r\n                        <i className=\"fas fa-plus\"></i>\r\n                        <span>&nbsp;&nbsp;Add Magazine</span>\r\n                    </Button>\r\n                </Row>\r\n                {showMgz(chunk(mgzDetail, 3), value)}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default MagazinesPage\r\n\r\n//divide 3 card each CardDeck (row)\r\nconst chunk = (arr: any, chunkSize: number) =>  {\r\n    if(arr) {\r\n        const cache: Array<any> = new Array<any>()\r\n        const tmp = [...arr]\r\n        if (chunkSize <= 0) return cache\r\n        while (tmp.length) cache.push(tmp.splice(0, chunkSize))\r\n        return cache\r\n    }\r\n}\r\n//return data to MagazineBlock\r\nconst showMgz = (info: any, value:number) => {\r\n    if(info) {\r\n        return info.map( (subArr: any, index: any) => {\r\n            const aMgzBlock = subArr.map( (el: any, i: any) => {\r\n                return <MagazineBlock key={i} label={el.label} closureTemp={el.closureTemp} closureFinal={el.closureFinal} tabStatus={value} createdAt={el.createdAt}/>\r\n            })\r\n            return <Row key={index} style={{margin: 0}}>{aMgzBlock}</Row>\r\n        })\r\n    }\r\n}","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\Pages\\ContributeMgz.tsx",["91","92","93","94"],"import React from 'react'\r\nimport { Container, Row, Button } from 'reactstrap'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport const ContributeMgzPage = () => {\r\n    const params = useParams();\r\n    return (\r\n        <Container>\r\n            <div className=\"justify-content\">\r\n                <h2 style={{}}>Contribution of {params.mgzTitle}</h2>\r\n            </div>\r\n\r\n        </Container>\r\n    )\r\n}\r\nexport default ContributeMgzPage","C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\MagazineAdminBlock.tsx",[],"C:\\Users\\hunu208\\Documents\\GitHub\\study-management\\src\\components\\MagazineStudentBlock.tsx",[],{"ruleId":"95","severity":1,"message":"96","line":36,"column":19,"nodeType":"97","messageId":"98","endLine":36,"endColumn":26},{"ruleId":"99","severity":1,"message":"96","line":36,"column":19,"nodeType":"97","messageId":"98","endLine":36,"endColumn":26},{"ruleId":"95","severity":1,"message":"100","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":36,"column":19,"nodeType":"97","messageId":"98","endLine":36,"endColumn":26},{"ruleId":"99","severity":1,"message":"96","line":36,"column":19,"nodeType":"97","messageId":"98","endLine":36,"endColumn":26},{"ruleId":"101","severity":2,"message":"102","line":46,"column":21,"nodeType":"97","endLine":46,"endColumn":30},{"ruleId":"95","severity":1,"message":"103","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"103","line":2,"column":21,"nodeType":"97","messageId":"98","endLine":2,"endColumn":24},{"ruleId":"95","severity":1,"message":"104","line":2,"column":26,"nodeType":"97","messageId":"98","endLine":2,"endColumn":32},{"ruleId":"99","severity":1,"message":"104","line":2,"column":26,"nodeType":"97","messageId":"98","endLine":2,"endColumn":32},"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'useNavigate' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useStyles\" is called conditionally. React Hooks must be called in the exact same order in every component render. Did you accidentally call a React Hook after an early return?","'Row' is defined but never used.","'Button' is defined but never used."]